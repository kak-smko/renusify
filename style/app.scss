@use "sass:map";
@use "sass:meta";
@use "functions";
@use "mixins";
@use "mixins/container";
@use "mixins/utilities" as utilities2;
@use "variables/base";
@use "variables/utilities";


html {
  font-size: base.$font-size-root;
  @include container.media-breakpoint-down('md') {
    font-size: base.$font-size-root-mobile;
  }

  & {
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    box-sizing: border-box;
    overflow-y: scroll;
    overflow-x: hidden;
    -webkit-text-size-adjust: 100%;
    scroll-behavior: smooth;
  }
;
}

body {
  overscroll-behavior: none;
}


/* scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 7px;
}

::-webkit-scrollbar-track:hover {
  border: 1px solid rgba(100, 100, 100, 0.4);
  border-radius: map.get(base.$borders, 'sm');
}

::-webkit-scrollbar-thumb {
  background: rgba(100, 100, 100, 0.4);
  border-radius: map.get(base.$borders, 'sm');
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(100, 100, 100, 0.6);
}

$color: var(--color-one);
$color-text: var(--color-on-one);

::-moz-selection {
  color: $color-text;
  background: $color;
}

::selection {
  color: $color-text;
  background: $color;
}

.#{base.$prefix}app {
  font-family: base.$body-font-family;
  line-height: base.$line-height-root;


  ::-ms-clear,
  ::-ms-reveal {
    display: none
  }

  .ltr {
    text-align: left;
    direction: ltr;
  }

  .rtl {
    text-align: right;
    direction: rtl;
  }

  a {
    color: currentColor;
    text-decoration: none;
  }

}

.router-link-exact-active, a:hover {
  color: var(--color-one)
}

//curser
.#{base.$prefix}app {
  @each $name in base.$cursor {
    .cursor-#{$name} {
      cursor: #{$name};
    }
  }
}

//display
.#{base.$prefix}app {
  @each $size, $media_query in base.$display-breakpoints {
    .hidden {
      &-#{$size} {
        @media #{$media_query}{
          display: none !important
        }
      }
    }
  }
}

//text
.#{base.$prefix}app {
  @each $name, $weight in base.$font-weights {
    .font-weight {
      &-#{$name} {
        font-weight: $weight !important
      }
    }
  }

  .font-italic {
    font-style: italic !important
  }
}

//typography
.#{base.$prefix}app {
  @include mixins.typography(base.$headings, 'body-2');

  .display-1 {
    @include mixins.typography(base.$headings, 'display-1')
  }

  .display-2 {
    @include mixins.typography(base.$headings, 'display-2')
  }

  .display-3 {
    @include mixins.typography(base.$headings, 'display-3')
  }

  .headline-1, h1 {
    @include mixins.typography(base.$headings, 'headline-1')
  }

  .headline-2, h2 {
    @include mixins.typography(base.$headings, 'headline-2')
  }

  .headline-3, h3 {
    @include mixins.typography(base.$headings, 'headline-3')
  }

  .title-1, h4 {
    @include mixins.typography(base.$headings, 'title-1')
  }

  .title-2, h5 {
    @include mixins.typography(base.$headings, 'title-2');
  }

  .title-3, h6 {
    @include mixins.typography(base.$headings, 'title-3');
  }

  .body-1 {
    @include mixins.typography(base.$headings, 'body-1');
  }

  .body-2 {
    @include mixins.typography(base.$headings, 'body-2');
  }

  .body-3 {
    @include mixins.typography(base.$headings, 'body-3');
  }


  .label-1 {
    @include mixins.typography(base.$headings, 'label-1')
  }

  .label-2 {
    @include mixins.typography(base.$headings, 'label-2')
  }

  .label-3 {
    @include mixins.typography(base.$headings, 'label-3')
  }

  p {
    margin-bottom: base.$spacer * 4
  }

}

//width
.#{base.$prefix}app {
  @each $name, $value in base.$widths {
    .w-#{$name} {
      width: $value !important
    }
  }
  @each $name, $value in base.$heights {
    .h-#{$name} {
      height: $value !important
    }
  }
}

//transition
.#{base.$prefix}app {
  @each $name, $bezier in base.$transition {
    .timing-#{$name} {
      transition-timing-function: $bezier !important
    }
  }
}

//z-index
.#{base.$prefix}app {
  @each $name, $value in base.$z-index {
    .z-#{$name} {
      z-index: $value !important;
    }
  }
}

// Utilities
@each $breakpoint in map.keys(base.$grid-breakpoints) {
  @include container.media-breakpoint-up($breakpoint) {
    $infix: functions.breakpoint-min-name($breakpoint, base.$grid-breakpoints);
    @each $key, $utility in utilities.$utilities {
      @if meta.type-of($utility) == "map" and (map.get($utility, responsive) or $infix == "") {
        @include utilities2.build-utility($utility, $infix)
      }
    }
  }


}

// Print utilities
@media print {
  @each $key, $utility in utilities.$utilities {
    @if meta.type-of($utility) == "map" and map.get($utility, print) == true {
      @include utilities2.build-utility($utility, "-print")
    }

  }
}

.#{base.$prefix}app {
  @each $name, $value in base.$box-shadows {
    .elevation-#{$name} {
      @include mixins.elevation($name, $important: true);
    }
  }
}

.#{base.$prefix}app {
  * {
    scroll-margin: 100px;
  }

  ol, ul {
    margin: 0 15px;
  }

  pre {
    border-left: 5px solid var(--color-one);
  }

  pre {
    direction: ltr;
    counter-reset: line-numbering;
    text-align: left;
    font-size: 17px;
    line-height: 22px;
    border: 2px solid grey;
    border-radius: map.get(base.$borders, 'sm');
    background-color: #283739;
    color: white;
    padding: 0em 1em;
    margin: 0.5em 0;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  pre .line::before {
    content: counter(line-numbering);
    counter-increment: line-numbering;
    padding-right: 1em;
    /* space after numbers */
    padding-left: 8px;
    width: 1.5em;
    text-align: right;
    opacity: 0.5;
    color: white;
  }

  blockquote {
    background-color: var(--color-one-container);
    border: 5px solid var(--color-border);

    &::before {
      background-color: var(--color-one-container);
    }

    &::after {
      color: var(--color-on-one-container);
    }
  }

  blockquote {
    font-family: Georgia, Times, "Times New Roman", serif;
    font-size: 1.25em;
    font-style: italic;
    line-height: 1.8em;
    margin: 1.1em;
    padding: 1em 2em;
    position: relative;
    transition: .2s border ease-in-out;
    z-index: 0;

    &::before {
      content: "";
      position: absolute;
      top: 50%;
      height: 2em;
      width: 7px;
      margin-top: -1em
    }

    &::after {
      content: "\F27E";
      display: inline-block;
      font: normal normal normal 24px/1 "Material Design Icons";
      font-size: 40px;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      position: absolute;
      top: 50%;
      font-style: normal;
      line-height: 1em;
      text-align: center;
      text-indent: -2px;
      width: 1em;
      margin-top: -0.5em;
      transition: .2s all ease-in-out, .4s transform ease-in-out;
    }

    @include mixins.ltr() {
      border-right-width: 0;
      border-bottom-width: 0;
      border-top-width: 0;
      &::before {
        left: -5px;
      }
      &::after {
        left: -0.5em;
      }
    }
    @include mixins.rtl() {
      border-bottom-width: 0;
      border-left-width: 0;
      border-top-width: 0;
      &::before {
        right: -5px;
      }
      &::after {
        right: -0.5em;
      }
    }
  }
}

